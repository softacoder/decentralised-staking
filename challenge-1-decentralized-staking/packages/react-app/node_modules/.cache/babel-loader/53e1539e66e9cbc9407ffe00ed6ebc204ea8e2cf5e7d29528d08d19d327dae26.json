{"ast":null,"code":"var _jsxFileName = \"/Users/jansofta/Documents/GitHub/decentralised-staking/challenge-1-decentralized-staking/packages/react-app/src/components/Wallet.jsx\",\n  _s = $RefreshSig$();\nimport { KeyOutlined, QrcodeOutlined, SendOutlined, WalletOutlined } from \"@ant-design/icons\";\nimport { Button, Modal, Spin, Tooltip, Typography } from \"antd\";\nimport { ethers } from \"ethers\";\nimport QR from \"qrcode.react\";\nimport React, { useState, useEffect } from \"react\";\nimport { Transactor } from \"../helpers\";\nimport Address from \"./Address\";\nimport AddressInput from \"./AddressInput\";\nimport Balance from \"./Balance\";\nimport EtherInput from \"./EtherInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Text,\n  Paragraph\n} = Typography;\n\n/*\n  ~ What it does? ~\n\n  Displays a wallet where you can specify address and send USD/ETH, with options to\n  scan address, to convert between USD and ETH, to see and generate private keys,\n  to send, receive and extract the burner wallet\n\n  ~ How can I use? ~\n\n  <Wallet\n    provider={userProvider}\n    address={address}\n    ensProvider={mainnetProvider}\n    price={price}\n    color='red'\n  />\n\n  ~ Features ~\n\n  - Provide provider={userProvider} to display a wallet\n  - Provide address={address} if you want to specify address, otherwise\n                                                    your default address will be used\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide color to specify the color of wallet icon\n*/\n\nexport default function Wallet(props) {\n  _s();\n  const [signerAddress, setSignerAddress] = useState();\n  useEffect(() => {\n    async function getAddress() {\n      if (props.signer) {\n        const newAddress = await props.signer.getAddress();\n        setSignerAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [props.signer]);\n  const selectedAddress = props.address || signerAddress;\n  const [open, setOpen] = useState();\n  const [qr, setQr] = useState();\n  const [amount, setAmount] = useState();\n  const [toAddress, setToAddress] = useState();\n  const [pk, setPK] = useState();\n  const providerSend = props.provider ? /*#__PURE__*/_jsxDEV(Tooltip, {\n    title: \"Wallet\",\n    children: /*#__PURE__*/_jsxDEV(WalletOutlined, {\n      onClick: () => {\n        setOpen(!open);\n      },\n      rotate: -90,\n      style: {\n        padding: 7,\n        color: props.color ? props.color : \"\",\n        cursor: \"pointer\",\n        fontSize: 28,\n        verticalAlign: \"middle\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this) : \"\";\n  let display;\n  let receiveButton;\n  let privateKeyButton;\n  if (qr) {\n    display = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          copyable: true,\n          children: selectedAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QR, {\n        value: selectedAddress,\n        size: \"450\",\n        level: \"H\",\n        includeMargin: true,\n        renderAs: \"svg\",\n        imageSettings: {\n          excavate: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n    receiveButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setQr(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(QrcodeOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), \" Hide\"]\n    }, \"hide\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n    privateKeyButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setPK(selectedAddress);\n        setQr(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(KeyOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), \" Private Key\"]\n    }, \"hide\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  } else if (pk) {\n    const pk = localStorage.getItem(\"metaPrivateKey\");\n    const wallet = new ethers.Wallet(pk);\n    if (wallet.address !== selectedAddress) {\n      display = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"*injected account*, private key unknown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this);\n    } else {\n      const extraPkDisplayAdded = {};\n      const extraPkDisplay = [];\n      extraPkDisplayAdded[wallet.address] = true;\n      extraPkDisplay.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: 16,\n          padding: 2,\n          backgroundStyle: \"#89e789\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/pk#\" + pk,\n          children: [/*#__PURE__*/_jsxDEV(Address, {\n            minimized: true,\n            address: wallet.address,\n            ensProvider: props.ensProvider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), \" \", wallet.address.substr(0, 6)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this));\n      for (const key in localStorage) {\n        if (key.indexOf(\"metaPrivateKey_backup\") >= 0) {\n          console.log(key);\n          const pastpk = localStorage.getItem(key);\n          const pastwallet = new ethers.Wallet(pastpk);\n          if (!extraPkDisplayAdded[pastwallet.address] /* && selectedAddress!=pastwallet.address */) {\n            extraPkDisplayAdded[pastwallet.address] = true;\n            extraPkDisplay.push( /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: 16\n              },\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/pk#\" + pastpk,\n                children: [/*#__PURE__*/_jsxDEV(Address, {\n                  minimized: true,\n                  address: pastwallet.address,\n                  ensProvider: props.ensProvider\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this), \" \", pastwallet.address.substr(0, 6)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this));\n          }\n        }\n      }\n      display = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Private Key:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            copyable: true,\n            children: pk\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          children: [\"Point your camera phone at qr code to open in\", /*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            href: \"https://xdai.io/\" + pk,\n            rel: \"noopener noreferrer\",\n            children: \"burner wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(QR, {\n          value: \"https://xdai.io/\" + pk,\n          size: \"450\",\n          level: \"H\",\n          includeMargin: true,\n          renderAs: \"svg\",\n          imageSettings: {\n            excavate: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n          style: {\n            fontSize: \"16\"\n          },\n          copyable: true,\n          children: \"https://xdai.io/\" + pk\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), extraPkDisplay ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Known Private Keys:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), extraPkDisplay, /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n              if (currentPrivateKey) {\n                window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\n              }\n              const randomWallet = ethers.Wallet.createRandom();\n              const privateKey = randomWallet._signingKey().privateKey;\n              window.localStorage.setItem(\"metaPrivateKey\", privateKey);\n              window.location.reload();\n            },\n            children: \"Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this);\n    }\n    receiveButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setQr(selectedAddress);\n        setPK(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(QrcodeOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), \" Receive\"]\n    }, \"receive\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this);\n    privateKeyButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setPK(\"\");\n        setQr(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(KeyOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), \" Hide\"]\n    }, \"hide\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this);\n  } else {\n    const inputStyle = {\n      padding: 10\n    };\n    display = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: inputStyle,\n        children: /*#__PURE__*/_jsxDEV(AddressInput, {\n          autoFocus: true,\n          ensProvider: props.ensProvider,\n          placeholder: \"to address\",\n          address: toAddress,\n          onChange: setToAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: inputStyle,\n        children: /*#__PURE__*/_jsxDEV(EtherInput, {\n          price: props.price,\n          value: amount,\n          onChange: value => {\n            setAmount(value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this);\n    receiveButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setQr(selectedAddress);\n        setPK(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(QrcodeOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), \" Receive\"]\n    }, \"receive\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this);\n    privateKeyButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setPK(selectedAddress);\n        setQr(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(KeyOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), \" Private Key\"]\n    }, \"hide\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [providerSend, /*#__PURE__*/_jsxDEV(Modal, {\n      visible: open,\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [selectedAddress ? /*#__PURE__*/_jsxDEV(Address, {\n          address: selectedAddress,\n          ensProvider: props.ensProvider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 104\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            float: \"right\",\n            paddingRight: 25\n          },\n          children: /*#__PURE__*/_jsxDEV(Balance, {\n            address: selectedAddress,\n            provider: props.provider,\n            dollarMultiplier: props.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this),\n      onOk: () => {\n        setQr();\n        setPK();\n        setOpen(!open);\n      },\n      onCancel: () => {\n        setQr();\n        setPK();\n        setOpen(!open);\n      },\n      footer: [privateKeyButton, receiveButton, /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        disabled: !amount || !toAddress || qr,\n        loading: false,\n        onClick: () => {\n          const tx = Transactor(props.signer || props.provider);\n          let value;\n          try {\n            value = ethers.utils.parseEther(\"\" + amount);\n          } catch (e) {\n            // failed to parseEther, try something else\n            value = ethers.utils.parseEther(\"\" + parseFloat(amount).toFixed(8));\n          }\n          tx({\n            to: toAddress,\n            value\n          });\n          setOpen(!open);\n          setQr();\n        },\n        children: [/*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this), \" Send\"]\n      }, \"submit\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this)],\n      children: display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 5\n  }, this);\n}\n_s(Wallet, \"RR8RrILVK4aiQPz9aSoOMtj+2GU=\");\n_c = Wallet;\nvar _c;\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"names":["KeyOutlined","QrcodeOutlined","SendOutlined","WalletOutlined","Button","Modal","Spin","Tooltip","Typography","ethers","QR","React","useState","useEffect","Transactor","Address","AddressInput","Balance","EtherInput","jsxDEV","_jsxDEV","Text","Paragraph","Wallet","props","_s","signerAddress","setSignerAddress","getAddress","signer","newAddress","selectedAddress","address","open","setOpen","qr","setQr","amount","setAmount","toAddress","setToAddress","pk","setPK","providerSend","provider","title","children","onClick","rotate","style","padding","color","cursor","fontSize","verticalAlign","fileName","_jsxFileName","lineNumber","columnNumber","display","receiveButton","privateKeyButton","copyable","value","size","level","includeMargin","renderAs","imageSettings","excavate","localStorage","getItem","wallet","extraPkDisplayAdded","extraPkDisplay","push","backgroundStyle","href","minimized","ensProvider","substr","key","indexOf","console","log","pastpk","pastwallet","target","rel","currentPrivateKey","window","setItem","Date","now","randomWallet","createRandom","privateKey","_signingKey","location","reload","inputStyle","autoFocus","placeholder","onChange","price","visible","float","paddingRight","dollarMultiplier","onOk","onCancel","footer","type","disabled","loading","tx","utils","parseEther","e","parseFloat","toFixed","to","_c","$RefreshReg$"],"sources":["/Users/jansofta/Documents/GitHub/decentralised-staking/challenge-1-decentralized-staking/packages/react-app/src/components/Wallet.jsx"],"sourcesContent":["import { KeyOutlined, QrcodeOutlined, SendOutlined, WalletOutlined } from \"@ant-design/icons\";\nimport { Button, Modal, Spin, Tooltip, Typography } from \"antd\";\nimport { ethers } from \"ethers\";\nimport QR from \"qrcode.react\";\nimport React, { useState, useEffect } from \"react\";\nimport { Transactor } from \"../helpers\";\nimport Address from \"./Address\";\nimport AddressInput from \"./AddressInput\";\nimport Balance from \"./Balance\";\nimport EtherInput from \"./EtherInput\";\n\nconst { Text, Paragraph } = Typography;\n\n/*\n  ~ What it does? ~\n\n  Displays a wallet where you can specify address and send USD/ETH, with options to\n  scan address, to convert between USD and ETH, to see and generate private keys,\n  to send, receive and extract the burner wallet\n\n  ~ How can I use? ~\n\n  <Wallet\n    provider={userProvider}\n    address={address}\n    ensProvider={mainnetProvider}\n    price={price}\n    color='red'\n  />\n\n  ~ Features ~\n\n  - Provide provider={userProvider} to display a wallet\n  - Provide address={address} if you want to specify address, otherwise\n                                                    your default address will be used\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide color to specify the color of wallet icon\n*/\n\nexport default function Wallet(props) {\n  const [signerAddress, setSignerAddress] = useState();\n  useEffect(() => {\n    async function getAddress() {\n      if (props.signer) {\n        const newAddress = await props.signer.getAddress();\n        setSignerAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [props.signer]);\n\n  const selectedAddress = props.address || signerAddress;\n\n  const [open, setOpen] = useState();\n  const [qr, setQr] = useState();\n  const [amount, setAmount] = useState();\n  const [toAddress, setToAddress] = useState();\n  const [pk, setPK] = useState();\n\n  const providerSend = props.provider ? (\n    <Tooltip title=\"Wallet\">\n      <WalletOutlined\n        onClick={() => {\n          setOpen(!open);\n        }}\n        rotate={-90}\n        style={{\n          padding: 7,\n          color: props.color ? props.color : \"\",\n          cursor: \"pointer\",\n          fontSize: 28,\n          verticalAlign: \"middle\",\n        }}\n      />\n    </Tooltip>\n  ) : (\n    \"\"\n  );\n\n  let display;\n  let receiveButton;\n  let privateKeyButton;\n  if (qr) {\n    display = (\n      <div>\n        <div>\n          <Text copyable>{selectedAddress}</Text>\n        </div>\n        <QR\n          value={selectedAddress}\n          size=\"450\"\n          level=\"H\"\n          includeMargin\n          renderAs=\"svg\"\n          imageSettings={{ excavate: false }}\n        />\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setQr(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Hide\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(selectedAddress);\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Private Key\n      </Button>\n    );\n  } else if (pk) {\n    const pk = localStorage.getItem(\"metaPrivateKey\");\n    const wallet = new ethers.Wallet(pk);\n\n    if (wallet.address !== selectedAddress) {\n      display = (\n        <div>\n          <b>*injected account*, private key unknown</b>\n        </div>\n      );\n    } else {\n      const extraPkDisplayAdded = {};\n      const extraPkDisplay = [];\n      extraPkDisplayAdded[wallet.address] = true;\n      extraPkDisplay.push(\n        <div style={{ fontSize: 16, padding: 2, backgroundStyle: \"#89e789\" }}>\n          <a href={\"/pk#\" + pk}>\n            <Address minimized address={wallet.address} ensProvider={props.ensProvider} /> {wallet.address.substr(0, 6)}\n          </a>\n        </div>,\n      );\n      for (const key in localStorage) {\n        if (key.indexOf(\"metaPrivateKey_backup\") >= 0) {\n          console.log(key);\n          const pastpk = localStorage.getItem(key);\n          const pastwallet = new ethers.Wallet(pastpk);\n          if (!extraPkDisplayAdded[pastwallet.address] /* && selectedAddress!=pastwallet.address */) {\n            extraPkDisplayAdded[pastwallet.address] = true;\n            extraPkDisplay.push(\n              <div style={{ fontSize: 16 }}>\n                <a href={\"/pk#\" + pastpk}>\n                  <Address minimized address={pastwallet.address} ensProvider={props.ensProvider} />{\" \"}\n                  {pastwallet.address.substr(0, 6)}\n                </a>\n              </div>,\n            );\n          }\n        }\n      }\n\n      display = (\n        <div>\n          <b>Private Key:</b>\n\n          <div>\n            <Text copyable>{pk}</Text>\n          </div>\n\n          <hr />\n\n          <i>\n            Point your camera phone at qr code to open in\n            <a target=\"_blank\" href={\"https://xdai.io/\" + pk} rel=\"noopener noreferrer\">\n              burner wallet\n            </a>\n            :\n          </i>\n          <QR\n            value={\"https://xdai.io/\" + pk}\n            size=\"450\"\n            level=\"H\"\n            includeMargin\n            renderAs=\"svg\"\n            imageSettings={{ excavate: false }}\n          />\n\n          <Paragraph style={{ fontSize: \"16\" }} copyable>\n            {\"https://xdai.io/\" + pk}\n          </Paragraph>\n\n          {extraPkDisplay ? (\n            <div>\n              <h3>Known Private Keys:</h3>\n              {extraPkDisplay}\n              <Button\n                onClick={() => {\n                  const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n                  if (currentPrivateKey) {\n                    window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\n                  }\n                  const randomWallet = ethers.Wallet.createRandom();\n                  const privateKey = randomWallet._signingKey().privateKey;\n                  window.localStorage.setItem(\"metaPrivateKey\", privateKey);\n                  window.location.reload();\n                }}\n              >\n                Generate\n              </Button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      );\n    }\n\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress);\n          setPK(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(\"\");\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Hide\n      </Button>\n    );\n  } else {\n    const inputStyle = {\n      padding: 10,\n    };\n\n    display = (\n      <div>\n        <div style={inputStyle}>\n          <AddressInput\n            autoFocus\n            ensProvider={props.ensProvider}\n            placeholder=\"to address\"\n            address={toAddress}\n            onChange={setToAddress}\n          />\n        </div>\n        <div style={inputStyle}>\n          <EtherInput\n            price={props.price}\n            value={amount}\n            onChange={value => {\n              setAmount(value);\n            }}\n          />\n        </div>\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress);\n          setPK(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(selectedAddress);\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Private Key\n      </Button>\n    );\n  }\n\n  return (\n    <span>\n      {providerSend}\n      <Modal\n        visible={open}\n        title={\n          <div>\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\n            <div style={{ float: \"right\", paddingRight: 25 }}>\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\n            </div>\n          </div>\n        }\n        onOk={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        onCancel={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        footer={[\n          privateKeyButton,\n          receiveButton,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            disabled={!amount || !toAddress || qr}\n            loading={false}\n            onClick={() => {\n              const tx = Transactor(props.signer || props.provider);\n\n              let value;\n              try {\n                value = ethers.utils.parseEther(\"\" + amount);\n              } catch (e) {\n                // failed to parseEther, try something else\n                value = ethers.utils.parseEther(\"\" + parseFloat(amount).toFixed(8));\n              }\n\n              tx({\n                to: toAddress,\n                value,\n              });\n              setOpen(!open);\n              setQr();\n            }}\n          >\n            <SendOutlined /> Send\n          </Button>,\n        ]}\n      >\n        {display}\n      </Modal>\n    </span>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}