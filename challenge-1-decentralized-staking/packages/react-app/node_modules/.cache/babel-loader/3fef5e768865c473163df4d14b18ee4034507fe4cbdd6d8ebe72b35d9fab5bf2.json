{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { loadAppContracts } from \"../helpers/loadAppContracts\";\nexport const useContractConfig = () => {\n  _s();\n  const [contractsConfig, setContractsConfig] = useState({});\n  useEffect(() => {\n    const loadFunc = async () => {\n      const result = await loadAppContracts();\n      setContractsConfig(result);\n    };\n    void loadFunc();\n  }, []);\n  return contractsConfig;\n};\n_s(useContractConfig, \"70U5uRmUhIQerZuiKaONeGYV0hk=\");","map":{"version":3,"names":["useState","useEffect","loadAppContracts","useContractConfig","_s","contractsConfig","setContractsConfig","loadFunc","result"],"sources":["/Users/jansofta/Documents/GitHub/decentralised-staking/challenge-1-decentralized-staking/packages/react-app/src/hooks/useContractConfig.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { loadAppContracts } from \"../helpers/loadAppContracts\";\r\n\r\nexport const useContractConfig = () => {\r\n  const [contractsConfig, setContractsConfig] = useState({});\r\n\r\n  useEffect(() => {\r\n    const loadFunc = async () => {\r\n      const result = await loadAppContracts();\r\n      setContractsConfig(result);\r\n    };\r\n    void loadFunc();\r\n  }, []);\r\n  return contractsConfig;\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,gBAAgB,QAAQ,6BAA6B;AAE9D,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACd,MAAMM,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,MAAM,GAAG,MAAMN,gBAAgB,CAAC,CAAC;MACvCI,kBAAkB,CAACE,MAAM,CAAC;IAC5B,CAAC;IACD,KAAKD,QAAQ,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EACN,OAAOF,eAAe;AACxB,CAAC;AAACD,EAAA,CAXWD,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}