{"ast":null,"code":"var _jsxFileName = \"/Users/jansofta/Documents/GitHub/decentralised-staking/challenge-1-decentralized-staking/packages/react-app/src/components/TokenBalance.jsx\",\n  _s = $RefreshSig$();\nimport { useTokenBalance } from \"eth-hooks/erc/erc-20/useTokenBalance\";\nimport React, { useState } from \"react\";\nimport { utils } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TokenBalance(props) {\n  _s();\n  const [dollarMode, setDollarMode] = useState(true);\n  const tokenContract = props.contracts && props.contracts[props.name];\n  const balance = useTokenBalance(tokenContract, props.address, 1777);\n  let floatBalance = parseFloat(\"0.00\");\n  let usingBalance = balance;\n  if (typeof props.balance !== \"undefined\") {\n    usingBalance = props.balance;\n  }\n  if (usingBalance) {\n    const etherBalance = utils.formatEther(usingBalance);\n    parseFloat(etherBalance).toFixed(2);\n    floatBalance = parseFloat(etherBalance);\n  }\n  let displayBalance = floatBalance.toFixed(4);\n  if (props.dollarMultiplier && dollarMode) {\n    displayBalance = \"$\" + (floatBalance * props.dollarMultiplier).toFixed(2);\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      verticalAlign: \"middle\",\n      fontSize: 24,\n      padding: 8,\n      cursor: \"pointer\"\n    },\n    onClick: () => {\n      setDollarMode(!dollarMode);\n    },\n    children: [props.img, \" \", displayBalance]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(TokenBalance, \"tB5S9MdLrATSSWxfSFxfC0SSDik=\", false, function () {\n  return [useTokenBalance];\n});\n_c = TokenBalance;\nvar _c;\n$RefreshReg$(_c, \"TokenBalance\");","map":{"version":3,"names":["useTokenBalance","React","useState","utils","jsxDEV","_jsxDEV","TokenBalance","props","_s","dollarMode","setDollarMode","tokenContract","contracts","name","balance","address","floatBalance","parseFloat","usingBalance","etherBalance","formatEther","toFixed","displayBalance","dollarMultiplier","style","verticalAlign","fontSize","padding","cursor","onClick","children","img","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jansofta/Documents/GitHub/decentralised-staking/challenge-1-decentralized-staking/packages/react-app/src/components/TokenBalance.jsx"],"sourcesContent":["import { useTokenBalance } from \"eth-hooks/erc/erc-20/useTokenBalance\";\nimport React, { useState } from \"react\";\n\nimport { utils } from \"ethers\";\n\nexport default function TokenBalance(props) {\n  const [dollarMode, setDollarMode] = useState(true);\n\n  const tokenContract = props.contracts && props.contracts[props.name];\n  const balance = useTokenBalance(tokenContract, props.address, 1777);\n\n  let floatBalance = parseFloat(\"0.00\");\n\n  let usingBalance = balance;\n\n  if (typeof props.balance !== \"undefined\") {\n    usingBalance = props.balance;\n  }\n\n  if (usingBalance) {\n    const etherBalance = utils.formatEther(usingBalance);\n    parseFloat(etherBalance).toFixed(2);\n    floatBalance = parseFloat(etherBalance);\n  }\n\n  let displayBalance = floatBalance.toFixed(4);\n\n  if (props.dollarMultiplier && dollarMode) {\n    displayBalance = \"$\" + (floatBalance * props.dollarMultiplier).toFixed(2);\n  }\n\n  return (\n    <span\n      style={{\n        verticalAlign: \"middle\",\n        fontSize: 24,\n        padding: 8,\n        cursor: \"pointer\",\n      }}\n      onClick={() => {\n        setDollarMode(!dollarMode);\n      }}\n    >\n      {props.img} {displayBalance}\n    </span>\n  );\n}\n"],"mappings":";;AAAA,SAASA,eAAe,QAAQ,sCAAsC;AACtE,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,KAAK,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,eAAe,SAASC,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMS,aAAa,GAAGJ,KAAK,CAACK,SAAS,IAAIL,KAAK,CAACK,SAAS,CAACL,KAAK,CAACM,IAAI,CAAC;EACpE,MAAMC,OAAO,GAAGd,eAAe,CAACW,aAAa,EAAEJ,KAAK,CAACQ,OAAO,EAAE,IAAI,CAAC;EAEnE,IAAIC,YAAY,GAAGC,UAAU,CAAC,MAAM,CAAC;EAErC,IAAIC,YAAY,GAAGJ,OAAO;EAE1B,IAAI,OAAOP,KAAK,CAACO,OAAO,KAAK,WAAW,EAAE;IACxCI,YAAY,GAAGX,KAAK,CAACO,OAAO;EAC9B;EAEA,IAAII,YAAY,EAAE;IAChB,MAAMC,YAAY,GAAGhB,KAAK,CAACiB,WAAW,CAACF,YAAY,CAAC;IACpDD,UAAU,CAACE,YAAY,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC;IACnCL,YAAY,GAAGC,UAAU,CAACE,YAAY,CAAC;EACzC;EAEA,IAAIG,cAAc,GAAGN,YAAY,CAACK,OAAO,CAAC,CAAC,CAAC;EAE5C,IAAId,KAAK,CAACgB,gBAAgB,IAAId,UAAU,EAAE;IACxCa,cAAc,GAAG,GAAG,GAAG,CAACN,YAAY,GAAGT,KAAK,CAACgB,gBAAgB,EAAEF,OAAO,CAAC,CAAC,CAAC;EAC3E;EAEA,oBACEhB,OAAA;IACEmB,KAAK,EAAE;MACLC,aAAa,EAAE,QAAQ;MACvBC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,CAAC;MACVC,MAAM,EAAE;IACV,CAAE;IACFC,OAAO,EAAEA,CAAA,KAAM;MACbnB,aAAa,CAAC,CAACD,UAAU,CAAC;IAC5B,CAAE;IAAAqB,QAAA,GAEDvB,KAAK,CAACwB,GAAG,EAAC,GAAC,EAACT,cAAc;EAAA;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEX;AAAC3B,EAAA,CAzCuBF,YAAY;EAAA,QAIlBN,eAAe;AAAA;AAAAoC,EAAA,GAJT9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}