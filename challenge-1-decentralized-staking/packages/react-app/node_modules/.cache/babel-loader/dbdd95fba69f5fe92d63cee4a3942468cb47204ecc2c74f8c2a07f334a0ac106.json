{"ast":null,"code":"var _jsxFileName = \"/Users/jansofta/Documents/GitHub/decentralised-staking/challenge-1-decentralized-staking/packages/react-app/src/components/Swap.jsx\",\n  _s = $RefreshSig$();\nimport { RetweetOutlined, SettingOutlined } from \"@ant-design/icons\";\nimport { ChainId, Fetcher, Percent, Token, TokenAmount, Trade, WETH } from \"@uniswap/sdk\";\nimport { abi as IUniswapV2Router02ABI } from \"@uniswap/v2-periphery/build/IUniswapV2Router02.json\";\nimport { Button, Card, Descriptions, Divider, Drawer, InputNumber, Modal, notification, Row, Select, Space, Tooltip, Typography } from \"antd\";\nimport { useBlockNumber, usePoller } from \"eth-hooks\";\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDebounce } from \"../hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst {\n  Text\n} = Typography;\nexport const ROUTER_ADDRESS = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nconst erc20Abi = [\"function balanceOf(address owner) view returns (uint256)\", \"function approve(address _spender, uint256 _value) public returns (bool success)\", \"function allowance(address _owner, address _spender) public view returns (uint256 remaining)\"];\nconst makeCall = async (callName, contract, args, metadata = {}) => {\n  if (contract[callName]) {\n    let result;\n    if (args) {\n      result = await contract[callName](...args, metadata);\n    } else {\n      result = await contract[callName]();\n    }\n    return result;\n  }\n  return undefined;\n  console.log(\"no call of that name!\");\n};\nconst defaultToken = \"ETH\";\nconst defaultTokenOut = \"DAI\";\nconst defaultSlippage = \"0.5\";\nconst defaultTimeLimit = 60 * 10;\nconst tokenListToObject = array => array.reduce((obj, item) => {\n  obj[item.symbol] = new Token(item.chainId, item.address, item.decimals, item.symbol, item.name);\n  return obj;\n}, {});\nfunction Swap({\n  selectedProvider,\n  tokenListURI\n}) {\n  _s();\n  const [tokenIn, setTokenIn] = useState(defaultToken);\n  const [tokenOut, setTokenOut] = useState(defaultTokenOut);\n  const [exact, setExact] = useState();\n  const [amountIn, setAmountIn] = useState();\n  const [amountInMax, setAmountInMax] = useState();\n  const [amountOut, setAmountOut] = useState();\n  const [amountOutMin, setAmountOutMin] = useState();\n  const [trades, setTrades] = useState();\n  const [routerAllowance, setRouterAllowance] = useState();\n  const [balanceIn, setBalanceIn] = useState();\n  const [balanceOut, setBalanceOut] = useState();\n  const [slippageTolerance, setSlippageTolerance] = useState(new Percent(Math.round(defaultSlippage * 100).toString(), \"10000\"));\n  const [timeLimit, setTimeLimit] = useState(defaultTimeLimit);\n  const [swapping, setSwapping] = useState(false);\n  const [approving, setApproving] = useState(false);\n  const [settingsVisible, setSettingsVisible] = useState(false);\n  const [swapModalVisible, setSwapModalVisible] = useState(false);\n  const [tokenList, setTokenList] = useState([]);\n  const [tokens, setTokens] = useState();\n  const [invertPrice, setInvertPrice] = useState(false);\n  const blockNumber = useBlockNumber(selectedProvider, 3000);\n  const signer = selectedProvider.getSigner();\n  const routerContract = new ethers.Contract(ROUTER_ADDRESS, IUniswapV2Router02ABI, signer);\n  const _tokenListUri = tokenListURI || \"https://gateway.ipfs.io/ipns/tokens.uniswap.org\";\n  const debouncedAmountIn = useDebounce(amountIn, 500);\n  const debouncedAmountOut = useDebounce(amountOut, 500);\n  const activeChainId = process.env.REACT_APP_NETWORK === \"kovan\" ? ChainId.KOVAN : ChainId.MAINNET;\n  useEffect(() => {\n    const getTokenList = async () => {\n      console.log(_tokenListUri);\n      try {\n        const tokenListResponse = await fetch(_tokenListUri);\n        const tokenListJson = await tokenListResponse.json();\n        const filteredTokens = tokenListJson.tokens.filter(function (t) {\n          return t.chainId === activeChainId;\n        });\n        const ethToken = WETH[activeChainId];\n        ethToken.name = \"Ethereum\";\n        ethToken.symbol = \"ETH\";\n        ethToken.logoURI = \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png\";\n        const _tokenList = [ethToken, ...filteredTokens];\n        setTokenList(_tokenList);\n        const _tokens = tokenListToObject(_tokenList);\n        setTokens(_tokens);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    getTokenList();\n  }, [tokenListURI]);\n  const getTrades = async () => {\n    if (tokenIn && tokenOut && (amountIn || amountOut)) {\n      const pairs = arr => arr.map((v, i) => arr.slice(i + 1).map(w => [v, w])).flat();\n      const baseTokens = tokenList.filter(function (t) {\n        return [\"DAI\", \"USDC\", \"USDT\", \"COMP\", \"ETH\", \"MKR\", \"LINK\", tokenIn, tokenOut].includes(t.symbol);\n      }).map(el => {\n        return new Token(el.chainId, el.address, el.decimals, el.symbol, el.name);\n      });\n      const listOfPairwiseTokens = pairs(baseTokens);\n      const getPairs = async list => {\n        const listOfPromises = list.map(item => Fetcher.fetchPairData(item[0], item[1], selectedProvider));\n        return Promise.all(listOfPromises.map(p => p.catch(() => undefined)));\n      };\n      const listOfPairs = await getPairs(listOfPairwiseTokens);\n      let bestTrade;\n      if (exact === \"in\") {\n        setAmountInMax();\n        bestTrade = Trade.bestTradeExactIn(listOfPairs.filter(item => item), new TokenAmount(tokens[tokenIn], ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals)), tokens[tokenOut], {\n          maxNumResults: 3,\n          maxHops: 1\n        });\n        if (bestTrade[0]) {\n          setAmountOut(bestTrade[0].outputAmount.toSignificant(6));\n        } else {\n          setAmountOut();\n        }\n      } else if (exact === \"out\") {\n        setAmountOutMin();\n        bestTrade = Trade.bestTradeExactOut(listOfPairs.filter(item => item), tokens[tokenIn], new TokenAmount(tokens[tokenOut], ethers.utils.parseUnits(amountOut.toString(), tokens[tokenOut].decimals)), {\n          maxNumResults: 3,\n          maxHops: 1\n        });\n        if (bestTrade[0]) {\n          setAmountIn(bestTrade[0].inputAmount.toSignificant(6));\n        } else {\n          setAmountIn();\n        }\n      }\n      setTrades(bestTrade);\n      console.log(bestTrade);\n    }\n  };\n  useEffect(() => {\n    getTrades();\n  }, [tokenIn, tokenOut, debouncedAmountIn, debouncedAmountOut, slippageTolerance, selectedProvider]);\n  useEffect(() => {\n    if (trades && trades[0]) {\n      if (exact === \"in\") {\n        setAmountOutMin(trades[0].minimumAmountOut(slippageTolerance));\n      } else if (exact === \"out\") {\n        setAmountInMax(trades[0].maximumAmountIn(slippageTolerance));\n      }\n    }\n  }, [slippageTolerance, amountIn, amountOut, trades]);\n  const getBalance = async (_token, _account, _contract) => {\n    let newBalance;\n    if (_token === \"ETH\") {\n      newBalance = await selectedProvider.getBalance(_account);\n    } else {\n      newBalance = await makeCall(\"balanceOf\", _contract, [_account]);\n    }\n    return newBalance;\n  };\n  const getAccountInfo = async () => {\n    if (tokens) {\n      const accountList = await selectedProvider.listAccounts();\n      if (tokenIn) {\n        const tempContractIn = new ethers.Contract(tokens[tokenIn].address, erc20Abi, selectedProvider);\n        const newBalanceIn = await getBalance(tokenIn, accountList[0], tempContractIn);\n        setBalanceIn(newBalanceIn);\n        let allowance;\n        if (tokenIn === \"ETH\") {\n          setRouterAllowance();\n        } else {\n          allowance = await makeCall(\"allowance\", tempContractIn, [accountList[0], ROUTER_ADDRESS]);\n          setRouterAllowance(allowance);\n        }\n      }\n      if (tokenOut) {\n        const tempContractOut = new ethers.Contract(tokens[tokenOut].address, erc20Abi, selectedProvider);\n        const newBalanceOut = await getBalance(tokenOut, accountList[0], tempContractOut);\n        setBalanceOut(newBalanceOut);\n      }\n    }\n  };\n  usePoller(getAccountInfo, 6000);\n  const route = trades ? trades.length > 0 ? trades[0].route.path.map(function (item) {\n    return item.symbol;\n  }) : [] : [];\n  const updateRouterAllowance = async newAllowance => {\n    setApproving(true);\n    try {\n      const tempContract = new ethers.Contract(tokens[tokenIn].address, erc20Abi, signer);\n      const result = await makeCall(\"approve\", tempContract, [ROUTER_ADDRESS, newAllowance]);\n      console.log(result);\n      setApproving(false);\n      return true;\n    } catch (e) {\n      notification.open({\n        message: \"Approval unsuccessful\",\n        description: `Error: ${e.message}`\n      });\n    }\n  };\n  const approveRouter = async () => {\n    const approvalAmount = exact === \"in\" ? ethers.utils.hexlify(ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals)) : amountInMax.raw.toString();\n    console.log(approvalAmount);\n    const approval = updateRouterAllowance(approvalAmount);\n    if (approval) {\n      notification.open({\n        message: \"Token transfer approved\",\n        description: `You can now swap up to ${amountIn} ${tokenIn}`\n      });\n    }\n  };\n  const removeRouterAllowance = async () => {\n    const approvalAmount = ethers.utils.hexlify(0);\n    console.log(approvalAmount);\n    const removal = updateRouterAllowance(approvalAmount);\n    if (removal) {\n      notification.open({\n        message: \"Token approval removed\",\n        description: `The router is no longer approved for ${tokenIn}`\n      });\n    }\n  };\n  const executeSwap = async () => {\n    setSwapping(true);\n    try {\n      let args;\n      const metadata = {};\n      let call;\n      const deadline = Math.floor(Date.now() / 1000) + timeLimit;\n      const path = trades[0].route.path.map(function (item) {\n        return item.address;\n      });\n      console.log(path);\n      const accountList = await selectedProvider.listAccounts();\n      const address = accountList[0];\n      if (exact === \"in\") {\n        const _amountIn = ethers.utils.hexlify(ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals));\n        const _amountOutMin = ethers.utils.hexlify(ethers.BigNumber.from(amountOutMin.raw.toString()));\n        if (tokenIn === \"ETH\") {\n          call = \"swapExactETHForTokens\";\n          args = [_amountOutMin, path, address, deadline];\n          metadata.value = _amountIn;\n        } else {\n          call = tokenOut === \"ETH\" ? \"swapExactTokensForETH\" : \"swapExactTokensForTokens\";\n          args = [_amountIn, _amountOutMin, path, address, deadline];\n        }\n      } else if (exact === \"out\") {\n        const _amountOut = ethers.utils.hexlify(ethers.utils.parseUnits(amountOut.toString(), tokens[tokenOut].decimals));\n        const _amountInMax = ethers.utils.hexlify(ethers.BigNumber.from(amountInMax.raw.toString()));\n        if (tokenIn === \"ETH\") {\n          call = \"swapETHForExactTokens\";\n          args = [_amountOut, path, address, deadline];\n          metadata.value = _amountInMax;\n        } else {\n          call = tokenOut === \"ETH\" ? \"swapTokensForExactETH\" : \"swapTokensForExactTokens\";\n          args = [_amountOut, _amountInMax, path, address, deadline];\n        }\n      }\n      console.log(call, args, metadata);\n      const result = await makeCall(call, routerContract, args, metadata);\n      console.log(result);\n      notification.open({\n        message: \"Swap complete 🦄\",\n        description: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: `Swapped ${tokenIn} for ${tokenOut}, transaction: `\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            copyable: true,\n            children: result.hash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      });\n      setSwapping(false);\n    } catch (e) {\n      console.log(e);\n      setSwapping(false);\n      notification.open({\n        message: \"Swap unsuccessful\",\n        description: `Error: ${e.message}`\n      });\n    }\n  };\n  const showSwapModal = () => {\n    setSwapModalVisible(true);\n  };\n  const handleSwapModalOk = () => {\n    setSwapModalVisible(false);\n    executeSwap();\n  };\n  const handleSwapModalCancel = () => {\n    setSwapModalVisible(false);\n  };\n  const insufficientBalance = balanceIn ? parseFloat(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals)) < amountIn : null;\n  const inputIsToken = tokenIn !== \"ETH\";\n  const insufficientAllowance = !inputIsToken ? false : routerAllowance ? parseFloat(ethers.utils.formatUnits(routerAllowance, tokens[tokenIn].decimals)) < amountIn : null;\n  const formattedBalanceIn = balanceIn ? parseFloat(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals)).toPrecision(6) : null;\n  const formattedBalanceOut = balanceOut ? parseFloat(ethers.utils.formatUnits(balanceOut, tokens[tokenOut].decimals)).toPrecision(6) : null;\n  const metaIn = tokens && tokenList && tokenIn ? tokenList.filter(function (t) {\n    return t.address === tokens[tokenIn].address;\n  })[0] : null;\n  const metaOut = tokens && tokenList && tokenOut ? tokenList.filter(function (t) {\n    return t.address === tokens[tokenOut].address;\n  })[0] : null;\n  const cleanIpfsURI = uri => {\n    try {\n      return uri.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\");\n    } catch (e) {\n      console.log(e, uri);\n      return uri;\n    }\n  };\n  const logoIn = metaIn ? cleanIpfsURI(metaIn.logoURI) : null;\n  const logoOut = metaOut ? cleanIpfsURI(metaOut.logoURI) : null;\n  const rawPrice = trades && trades[0] ? trades[0].executionPrice : null;\n  const price = rawPrice ? rawPrice.toSignificant(7) : null;\n  const priceDescription = rawPrice ? invertPrice ? `${rawPrice.invert().toSignificant(7)} ${tokenIn} per ${tokenOut}` : `${price} ${tokenOut} per ${tokenIn}` : null;\n  const priceWidget = /*#__PURE__*/_jsxDEV(Space, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      type: \"secondary\",\n      children: priceDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"text\",\n      onClick: () => {\n        setInvertPrice(!invertPrice);\n      },\n      children: /*#__PURE__*/_jsxDEV(RetweetOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 413,\n    columnNumber: 5\n  }, this);\n  const swapModal = /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"Confirm swap\",\n    visible: swapModalVisible,\n    onOk: handleSwapModalOk,\n    onCancel: handleSwapModalCancel,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoIn,\n          alt: tokenIn,\n          width: \"30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), amountIn, tokenIn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      justify: \"center\",\n      align: \"middle\",\n      style: {\n        width: 30\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u2193\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoOut,\n          alt: tokenOut,\n          width: \"30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this), amountOut, tokenOut]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: priceWidget\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: trades && (amountOutMin && exact === \"in\" || amountInMax && exact === \"out\") ? exact === \"in\" ? `Output is estimated. You will receive at least ${amountOutMin.toSignificant(6)} ${tokenOut} or the transaction will revert.` : `Input is estimated. You will sell at most ${amountInMax.toSignificant(6)} ${tokenIn} or the transaction will revert.` : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 427,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: /*#__PURE__*/_jsxDEV(Space, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://ipfs.io/ipfs/QmXttGpZrECX5qCyXbBQiqgQNytVGeZW5Anewvh2jc4psg\",\n        width: \"40\",\n        alt: \"uniswapLogo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Uniswapper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 9\n    }, this),\n    extra: /*#__PURE__*/_jsxDEV(Button, {\n      type: \"text\",\n      onClick: () => {\n        setSettingsVisible(true);\n      },\n      children: /*#__PURE__*/_jsxDEV(SettingOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 9\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Space, {\n      direction: \"vertical\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        justify: \"center\",\n        align: \"middle\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          size: \"small\",\n          type: \"inner\",\n          title: `From${exact === \"out\" && tokenIn && tokenOut ? \" (estimate)\" : \"\"}`,\n          extra: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: logoIn,\n              alt: tokenIn,\n              width: \"30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"link\",\n              onClick: () => {\n                setAmountOut();\n                setAmountIn(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals));\n                setAmountOutMin();\n                setAmountInMax();\n                setExact(\"in\");\n              },\n              children: formattedBalanceIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true),\n          style: {\n            width: 400,\n            textAlign: \"left\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputNumber, {\n            style: {\n              width: \"160px\"\n            },\n            min: 0,\n            size: \"large\",\n            value: amountIn,\n            onChange: e => {\n              setAmountOut();\n              setTrades();\n              setAmountIn(e);\n              setExact(\"in\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            showSearch: true,\n            value: tokenIn,\n            style: {\n              width: \"120px\"\n            },\n            size: \"large\",\n            bordered: false,\n            defaultValue: defaultToken,\n            onChange: value => {\n              console.log(value);\n              if (value === tokenOut) {\n                console.log(\"switch!\", tokenIn);\n                setTokenOut(tokenIn);\n                setAmountOut(amountIn);\n                setBalanceOut(balanceIn);\n              }\n              setTokenIn(value);\n              setTrades();\n              setAmountIn();\n              setExact(\"out\");\n              setBalanceIn();\n            },\n            filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n            optionFilterProp: \"children\",\n            children: tokenList.map(token => /*#__PURE__*/_jsxDEV(Option, {\n              value: token.symbol,\n              children: token.symbol\n            }, token.symbol, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        justify: \"center\",\n        align: \"middle\",\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: route.join(\"->\"),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u2193\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        justify: \"center\",\n        align: \"middle\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          size: \"small\",\n          type: \"inner\",\n          title: `To${exact === \"in\" && tokenIn && tokenOut ? \" (estimate)\" : \"\"}`,\n          extra: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: logoOut,\n              width: \"30\",\n              alt: tokenOut\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"text\",\n              children: formattedBalanceOut\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true),\n          style: {\n            width: 400,\n            textAlign: \"left\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputNumber, {\n            style: {\n              width: \"160px\"\n            },\n            size: \"large\",\n            min: 0,\n            value: amountOut,\n            onChange: e => {\n              setAmountOut(e);\n              setAmountIn();\n              setTrades();\n              setExact(\"out\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            showSearch: true,\n            value: tokenOut,\n            style: {\n              width: \"120px\"\n            },\n            size: \"large\",\n            bordered: false,\n            onChange: value => {\n              console.log(value, tokenIn, tokenOut);\n              if (value === tokenIn) {\n                console.log(\"switch!\", tokenOut);\n                setTokenIn(tokenOut);\n                setAmountIn(amountOut);\n                setBalanceIn(balanceOut);\n              }\n              setTokenOut(value);\n              setExact(\"in\");\n              setAmountOut();\n              setTrades();\n              setBalanceOut();\n            },\n            filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n            optionFilterProp: \"children\",\n            children: tokenList.map(token => /*#__PURE__*/_jsxDEV(Option, {\n              value: token.symbol,\n              children: token.symbol\n            }, token.symbol, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        justify: \"center\",\n        align: \"middle\",\n        children: priceDescription ? priceWidget : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        justify: \"center\",\n        align: \"middle\",\n        children: /*#__PURE__*/_jsxDEV(Space, {\n          children: [inputIsToken ? /*#__PURE__*/_jsxDEV(Button, {\n            size: \"large\",\n            loading: approving,\n            disabled: !insufficientAllowance,\n            onClick: approveRouter,\n            children: !insufficientAllowance && amountIn && amountOut ? \"Approved\" : \"Approve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 15\n          }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n            size: \"large\",\n            loading: swapping,\n            disabled: insufficientAllowance || insufficientBalance || !amountIn || !amountOut,\n            onClick: showSwapModal,\n            children: insufficientBalance ? \"Insufficient balance\" : \"Swap!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 13\n          }, this), swapModal]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      visible: settingsVisible,\n      onClose: () => {\n        setSettingsVisible(false);\n      },\n      width: 500,\n      children: /*#__PURE__*/_jsxDEV(Descriptions, {\n        title: \"Details\",\n        column: 1,\n        style: {\n          textAlign: \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"blockNumber\",\n          children: blockNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"routerAllowance\",\n          children: /*#__PURE__*/_jsxDEV(Space, {\n            children: [routerAllowance ? ethers.utils.formatUnits(routerAllowance, tokens[tokenIn].decimals) : null, routerAllowance > 0 ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: removeRouterAllowance,\n              children: \"Remove Allowance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 38\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"route\",\n          children: route.join(\"->\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"exact\",\n          children: exact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"bestPrice\",\n          children: trades ? trades.length > 0 ? trades[0].executionPrice.toSignificant(6) : null : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"nextMidPrice\",\n          children: trades ? trades.length > 0 ? trades[0].nextMidPrice.toSignificant(6) : null : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"priceImpact\",\n          children: trades ? trades.length > 0 ? trades[0].priceImpact.toSignificant(6) : null : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"slippageTolerance\",\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {\n            defaultValue: defaultSlippage,\n            min: 0,\n            max: 100,\n            precision: 2,\n            formatter: value => `${value}%`,\n            parser: value => value.replace(\"%\", \"\"),\n            onChange: value => {\n              console.log(value);\n              const slippagePercent = new Percent(Math.round(value * 100).toString(), \"10000\");\n              setSlippageTolerance(slippagePercent);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"amountInMax\",\n          children: amountInMax ? amountInMax.toExact() : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"amountOutMin\",\n          children: amountOutMin ? amountOutMin.toExact() : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"timeLimitInSeconds\",\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {\n            min: 0,\n            max: 3600,\n            defaultValue: defaultTimeLimit,\n            onChange: value => {\n              console.log(value);\n              setTimeLimit(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 462,\n    columnNumber: 5\n  }, this);\n}\n_s(Swap, \"OSaCcudNhqj8C1bdfxC/UnQ+OCc=\", false, function () {\n  return [useBlockNumber, useDebounce, useDebounce, usePoller];\n});\n_c = Swap;\nexport default Swap;\nvar _c;\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"names":["RetweetOutlined","SettingOutlined","ChainId","Fetcher","Percent","Token","TokenAmount","Trade","WETH","abi","IUniswapV2Router02ABI","Button","Card","Descriptions","Divider","Drawer","InputNumber","Modal","notification","Row","Select","Space","Tooltip","Typography","useBlockNumber","usePoller","ethers","React","useEffect","useState","useDebounce","jsxDEV","_jsxDEV","Fragment","_Fragment","Option","Text","ROUTER_ADDRESS","ZERO_ADDRESS","erc20Abi","makeCall","callName","contract","args","metadata","result","undefined","console","log","defaultToken","defaultTokenOut","defaultSlippage","defaultTimeLimit","tokenListToObject","array","reduce","obj","item","symbol","chainId","address","decimals","name","Swap","selectedProvider","tokenListURI","_s","tokenIn","setTokenIn","tokenOut","setTokenOut","exact","setExact","amountIn","setAmountIn","amountInMax","setAmountInMax","amountOut","setAmountOut","amountOutMin","setAmountOutMin","trades","setTrades","routerAllowance","setRouterAllowance","balanceIn","setBalanceIn","balanceOut","setBalanceOut","slippageTolerance","setSlippageTolerance","Math","round","toString","timeLimit","setTimeLimit","swapping","setSwapping","approving","setApproving","settingsVisible","setSettingsVisible","swapModalVisible","setSwapModalVisible","tokenList","setTokenList","tokens","setTokens","invertPrice","setInvertPrice","blockNumber","signer","getSigner","routerContract","Contract","_tokenListUri","debouncedAmountIn","debouncedAmountOut","activeChainId","process","env","REACT_APP_NETWORK","KOVAN","MAINNET","getTokenList","tokenListResponse","fetch","tokenListJson","json","filteredTokens","filter","t","ethToken","logoURI","_tokenList","_tokens","e","getTrades","pairs","arr","map","v","i","slice","w","flat","baseTokens","includes","el","listOfPairwiseTokens","getPairs","list","listOfPromises","fetchPairData","Promise","all","p","catch","listOfPairs","bestTrade","bestTradeExactIn","utils","parseUnits","maxNumResults","maxHops","outputAmount","toSignificant","bestTradeExactOut","inputAmount","minimumAmountOut","maximumAmountIn","getBalance","_token","_account","_contract","newBalance","getAccountInfo","accountList","listAccounts","tempContractIn","newBalanceIn","allowance","tempContractOut","newBalanceOut","route","length","path","updateRouterAllowance","newAllowance","tempContract","open","message","description","approveRouter","approvalAmount","hexlify","raw","approval","removeRouterAllowance","removal","executeSwap","call","deadline","floor","Date","now","_amountIn","_amountOutMin","BigNumber","from","value","_amountOut","_amountInMax","children","fileName","_jsxFileName","lineNumber","columnNumber","copyable","hash","showSwapModal","handleSwapModalOk","handleSwapModalCancel","insufficientBalance","parseFloat","formatUnits","inputIsToken","insufficientAllowance","formattedBalanceIn","toPrecision","formattedBalanceOut","metaIn","metaOut","cleanIpfsURI","uri","replace","logoIn","logoOut","rawPrice","executionPrice","price","priceDescription","invert","priceWidget","type","onClick","swapModal","title","visible","onOk","onCancel","src","alt","width","justify","align","style","extra","direction","size","textAlign","min","onChange","showSearch","bordered","defaultValue","filterOption","input","option","toLowerCase","indexOf","optionFilterProp","token","join","loading","disabled","onClose","column","Item","label","nextMidPrice","priceImpact","max","precision","formatter","parser","slippagePercent","toExact","_c","$RefreshReg$"],"sources":["/Users/jansofta/Documents/GitHub/decentralised-staking/challenge-1-decentralized-staking/packages/react-app/src/components/Swap.jsx"],"sourcesContent":["import { RetweetOutlined, SettingOutlined } from \"@ant-design/icons\";\nimport { ChainId, Fetcher, Percent, Token, TokenAmount, Trade, WETH } from \"@uniswap/sdk\";\nimport { abi as IUniswapV2Router02ABI } from \"@uniswap/v2-periphery/build/IUniswapV2Router02.json\";\nimport {\n  Button,\n  Card,\n  Descriptions,\n  Divider,\n  Drawer,\n  InputNumber,\n  Modal,\n  notification,\n  Row,\n  Select,\n  Space,\n  Tooltip,\n  Typography,\n} from \"antd\";\nimport { useBlockNumber, usePoller } from \"eth-hooks\";\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDebounce } from \"../hooks\";\n\nconst { Option } = Select;\nconst { Text } = Typography;\n\nexport const ROUTER_ADDRESS = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\n\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\n\nconst erc20Abi = [\n  \"function balanceOf(address owner) view returns (uint256)\",\n  \"function approve(address _spender, uint256 _value) public returns (bool success)\",\n  \"function allowance(address _owner, address _spender) public view returns (uint256 remaining)\",\n];\n\nconst makeCall = async (callName, contract, args, metadata = {}) => {\n  if (contract[callName]) {\n    let result;\n    if (args) {\n      result = await contract[callName](...args, metadata);\n    } else {\n      result = await contract[callName]();\n    }\n    return result;\n  }\n  return undefined;\n  console.log(\"no call of that name!\");\n};\n\nconst defaultToken = \"ETH\";\nconst defaultTokenOut = \"DAI\";\nconst defaultSlippage = \"0.5\";\nconst defaultTimeLimit = 60 * 10;\n\nconst tokenListToObject = array =>\n  array.reduce((obj, item) => {\n    obj[item.symbol] = new Token(item.chainId, item.address, item.decimals, item.symbol, item.name);\n    return obj;\n  }, {});\n\nfunction Swap({ selectedProvider, tokenListURI }) {\n  const [tokenIn, setTokenIn] = useState(defaultToken);\n  const [tokenOut, setTokenOut] = useState(defaultTokenOut);\n  const [exact, setExact] = useState();\n  const [amountIn, setAmountIn] = useState();\n  const [amountInMax, setAmountInMax] = useState();\n  const [amountOut, setAmountOut] = useState();\n  const [amountOutMin, setAmountOutMin] = useState();\n  const [trades, setTrades] = useState();\n  const [routerAllowance, setRouterAllowance] = useState();\n  const [balanceIn, setBalanceIn] = useState();\n  const [balanceOut, setBalanceOut] = useState();\n  const [slippageTolerance, setSlippageTolerance] = useState(\n    new Percent(Math.round(defaultSlippage * 100).toString(), \"10000\"),\n  );\n  const [timeLimit, setTimeLimit] = useState(defaultTimeLimit);\n  const [swapping, setSwapping] = useState(false);\n  const [approving, setApproving] = useState(false);\n  const [settingsVisible, setSettingsVisible] = useState(false);\n  const [swapModalVisible, setSwapModalVisible] = useState(false);\n\n  const [tokenList, setTokenList] = useState([]);\n\n  const [tokens, setTokens] = useState();\n\n  const [invertPrice, setInvertPrice] = useState(false);\n\n  const blockNumber = useBlockNumber(selectedProvider, 3000);\n\n  const signer = selectedProvider.getSigner();\n  const routerContract = new ethers.Contract(ROUTER_ADDRESS, IUniswapV2Router02ABI, signer);\n\n  const _tokenListUri = tokenListURI || \"https://gateway.ipfs.io/ipns/tokens.uniswap.org\";\n\n  const debouncedAmountIn = useDebounce(amountIn, 500);\n  const debouncedAmountOut = useDebounce(amountOut, 500);\n\n  const activeChainId = process.env.REACT_APP_NETWORK === \"kovan\" ? ChainId.KOVAN : ChainId.MAINNET;\n\n  useEffect(() => {\n    const getTokenList = async () => {\n      console.log(_tokenListUri);\n      try {\n        const tokenListResponse = await fetch(_tokenListUri);\n        const tokenListJson = await tokenListResponse.json();\n        const filteredTokens = tokenListJson.tokens.filter(function (t) {\n          return t.chainId === activeChainId;\n        });\n        const ethToken = WETH[activeChainId];\n        ethToken.name = \"Ethereum\";\n        ethToken.symbol = \"ETH\";\n        ethToken.logoURI =\n          \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png\";\n        const _tokenList = [ethToken, ...filteredTokens];\n        setTokenList(_tokenList);\n        const _tokens = tokenListToObject(_tokenList);\n        setTokens(_tokens);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    getTokenList();\n  }, [tokenListURI]);\n\n  const getTrades = async () => {\n    if (tokenIn && tokenOut && (amountIn || amountOut)) {\n      const pairs = arr => arr.map((v, i) => arr.slice(i + 1).map(w => [v, w])).flat();\n\n      const baseTokens = tokenList\n        .filter(function (t) {\n          return [\"DAI\", \"USDC\", \"USDT\", \"COMP\", \"ETH\", \"MKR\", \"LINK\", tokenIn, tokenOut].includes(t.symbol);\n        })\n        .map(el => {\n          return new Token(el.chainId, el.address, el.decimals, el.symbol, el.name);\n        });\n\n      const listOfPairwiseTokens = pairs(baseTokens);\n\n      const getPairs = async list => {\n        const listOfPromises = list.map(item => Fetcher.fetchPairData(item[0], item[1], selectedProvider));\n        return Promise.all(listOfPromises.map(p => p.catch(() => undefined)));\n      };\n\n      const listOfPairs = await getPairs(listOfPairwiseTokens);\n\n      let bestTrade;\n\n      if (exact === \"in\") {\n        setAmountInMax();\n        bestTrade = Trade.bestTradeExactIn(\n          listOfPairs.filter(item => item),\n          new TokenAmount(tokens[tokenIn], ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals)),\n          tokens[tokenOut],\n          { maxNumResults: 3, maxHops: 1 },\n        );\n        if (bestTrade[0]) {\n          setAmountOut(bestTrade[0].outputAmount.toSignificant(6));\n        } else {\n          setAmountOut();\n        }\n      } else if (exact === \"out\") {\n        setAmountOutMin();\n        bestTrade = Trade.bestTradeExactOut(\n          listOfPairs.filter(item => item),\n          tokens[tokenIn],\n          new TokenAmount(tokens[tokenOut], ethers.utils.parseUnits(amountOut.toString(), tokens[tokenOut].decimals)),\n          { maxNumResults: 3, maxHops: 1 },\n        );\n        if (bestTrade[0]) {\n          setAmountIn(bestTrade[0].inputAmount.toSignificant(6));\n        } else {\n          setAmountIn();\n        }\n      }\n\n      setTrades(bestTrade);\n\n      console.log(bestTrade);\n    }\n  };\n\n  useEffect(() => {\n    getTrades();\n  }, [tokenIn, tokenOut, debouncedAmountIn, debouncedAmountOut, slippageTolerance, selectedProvider]);\n\n  useEffect(() => {\n    if (trades && trades[0]) {\n      if (exact === \"in\") {\n        setAmountOutMin(trades[0].minimumAmountOut(slippageTolerance));\n      } else if (exact === \"out\") {\n        setAmountInMax(trades[0].maximumAmountIn(slippageTolerance));\n      }\n    }\n  }, [slippageTolerance, amountIn, amountOut, trades]);\n\n  const getBalance = async (_token, _account, _contract) => {\n    let newBalance;\n    if (_token === \"ETH\") {\n      newBalance = await selectedProvider.getBalance(_account);\n    } else {\n      newBalance = await makeCall(\"balanceOf\", _contract, [_account]);\n    }\n    return newBalance;\n  };\n\n  const getAccountInfo = async () => {\n    if (tokens) {\n      const accountList = await selectedProvider.listAccounts();\n\n      if (tokenIn) {\n        const tempContractIn = new ethers.Contract(tokens[tokenIn].address, erc20Abi, selectedProvider);\n        const newBalanceIn = await getBalance(tokenIn, accountList[0], tempContractIn);\n        setBalanceIn(newBalanceIn);\n\n        let allowance;\n\n        if (tokenIn === \"ETH\") {\n          setRouterAllowance();\n        } else {\n          allowance = await makeCall(\"allowance\", tempContractIn, [accountList[0], ROUTER_ADDRESS]);\n          setRouterAllowance(allowance);\n        }\n      }\n\n      if (tokenOut) {\n        const tempContractOut = new ethers.Contract(tokens[tokenOut].address, erc20Abi, selectedProvider);\n        const newBalanceOut = await getBalance(tokenOut, accountList[0], tempContractOut);\n        setBalanceOut(newBalanceOut);\n      }\n    }\n  };\n\n  usePoller(getAccountInfo, 6000);\n\n  const route = trades\n    ? trades.length > 0\n      ? trades[0].route.path.map(function (item) {\n          return item.symbol;\n        })\n      : []\n    : [];\n\n  const updateRouterAllowance = async newAllowance => {\n    setApproving(true);\n    try {\n      const tempContract = new ethers.Contract(tokens[tokenIn].address, erc20Abi, signer);\n      const result = await makeCall(\"approve\", tempContract, [ROUTER_ADDRESS, newAllowance]);\n      console.log(result);\n      setApproving(false);\n      return true;\n    } catch (e) {\n      notification.open({\n        message: \"Approval unsuccessful\",\n        description: `Error: ${e.message}`,\n      });\n    }\n  };\n\n  const approveRouter = async () => {\n    const approvalAmount =\n      exact === \"in\"\n        ? ethers.utils.hexlify(ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals))\n        : amountInMax.raw.toString();\n    console.log(approvalAmount);\n    const approval = updateRouterAllowance(approvalAmount);\n    if (approval) {\n      notification.open({\n        message: \"Token transfer approved\",\n        description: `You can now swap up to ${amountIn} ${tokenIn}`,\n      });\n    }\n  };\n\n  const removeRouterAllowance = async () => {\n    const approvalAmount = ethers.utils.hexlify(0);\n    console.log(approvalAmount);\n    const removal = updateRouterAllowance(approvalAmount);\n    if (removal) {\n      notification.open({\n        message: \"Token approval removed\",\n        description: `The router is no longer approved for ${tokenIn}`,\n      });\n    }\n  };\n\n  const executeSwap = async () => {\n    setSwapping(true);\n    try {\n      let args;\n      const metadata = {};\n\n      let call;\n      const deadline = Math.floor(Date.now() / 1000) + timeLimit;\n      const path = trades[0].route.path.map(function (item) {\n        return item.address;\n      });\n      console.log(path);\n      const accountList = await selectedProvider.listAccounts();\n      const address = accountList[0];\n\n      if (exact === \"in\") {\n        const _amountIn = ethers.utils.hexlify(ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals));\n        const _amountOutMin = ethers.utils.hexlify(ethers.BigNumber.from(amountOutMin.raw.toString()));\n        if (tokenIn === \"ETH\") {\n          call = \"swapExactETHForTokens\";\n          args = [_amountOutMin, path, address, deadline];\n          metadata.value = _amountIn;\n        } else {\n          call = tokenOut === \"ETH\" ? \"swapExactTokensForETH\" : \"swapExactTokensForTokens\";\n          args = [_amountIn, _amountOutMin, path, address, deadline];\n        }\n      } else if (exact === \"out\") {\n        const _amountOut = ethers.utils.hexlify(\n          ethers.utils.parseUnits(amountOut.toString(), tokens[tokenOut].decimals),\n        );\n        const _amountInMax = ethers.utils.hexlify(ethers.BigNumber.from(amountInMax.raw.toString()));\n        if (tokenIn === \"ETH\") {\n          call = \"swapETHForExactTokens\";\n          args = [_amountOut, path, address, deadline];\n          metadata.value = _amountInMax;\n        } else {\n          call = tokenOut === \"ETH\" ? \"swapTokensForExactETH\" : \"swapTokensForExactTokens\";\n          args = [_amountOut, _amountInMax, path, address, deadline];\n        }\n      }\n      console.log(call, args, metadata);\n      const result = await makeCall(call, routerContract, args, metadata);\n      console.log(result);\n      notification.open({\n        message: \"Swap complete 🦄\",\n        description: (\n          <>\n            <Text>{`Swapped ${tokenIn} for ${tokenOut}, transaction: `}</Text>\n            <Text copyable>{result.hash}</Text>\n          </>\n        ),\n      });\n      setSwapping(false);\n    } catch (e) {\n      console.log(e);\n      setSwapping(false);\n      notification.open({\n        message: \"Swap unsuccessful\",\n        description: `Error: ${e.message}`,\n      });\n    }\n  };\n\n  const showSwapModal = () => {\n    setSwapModalVisible(true);\n  };\n\n  const handleSwapModalOk = () => {\n    setSwapModalVisible(false);\n    executeSwap();\n  };\n\n  const handleSwapModalCancel = () => {\n    setSwapModalVisible(false);\n  };\n\n  const insufficientBalance = balanceIn\n    ? parseFloat(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals)) < amountIn\n    : null;\n  const inputIsToken = tokenIn !== \"ETH\";\n  const insufficientAllowance = !inputIsToken\n    ? false\n    : routerAllowance\n    ? parseFloat(ethers.utils.formatUnits(routerAllowance, tokens[tokenIn].decimals)) < amountIn\n    : null;\n  const formattedBalanceIn = balanceIn\n    ? parseFloat(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals)).toPrecision(6)\n    : null;\n  const formattedBalanceOut = balanceOut\n    ? parseFloat(ethers.utils.formatUnits(balanceOut, tokens[tokenOut].decimals)).toPrecision(6)\n    : null;\n\n  const metaIn =\n    tokens && tokenList && tokenIn\n      ? tokenList.filter(function (t) {\n          return t.address === tokens[tokenIn].address;\n        })[0]\n      : null;\n  const metaOut =\n    tokens && tokenList && tokenOut\n      ? tokenList.filter(function (t) {\n          return t.address === tokens[tokenOut].address;\n        })[0]\n      : null;\n\n  const cleanIpfsURI = uri => {\n    try {\n      return uri.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\");\n    } catch (e) {\n      console.log(e, uri);\n      return uri;\n    }\n  };\n\n  const logoIn = metaIn ? cleanIpfsURI(metaIn.logoURI) : null;\n  const logoOut = metaOut ? cleanIpfsURI(metaOut.logoURI) : null;\n\n  const rawPrice = trades && trades[0] ? trades[0].executionPrice : null;\n  const price = rawPrice ? rawPrice.toSignificant(7) : null;\n  const priceDescription = rawPrice\n    ? invertPrice\n      ? `${rawPrice.invert().toSignificant(7)} ${tokenIn} per ${tokenOut}`\n      : `${price} ${tokenOut} per ${tokenIn}`\n    : null;\n\n  const priceWidget = (\n    <Space>\n      <Text type=\"secondary\">{priceDescription}</Text>\n      <Button\n        type=\"text\"\n        onClick={() => {\n          setInvertPrice(!invertPrice);\n        }}\n      >\n        <RetweetOutlined />\n      </Button>\n    </Space>\n  );\n\n  const swapModal = (\n    <Modal title=\"Confirm swap\" visible={swapModalVisible} onOk={handleSwapModalOk} onCancel={handleSwapModalCancel}>\n      <Row>\n        <Space>\n          <img src={logoIn} alt={tokenIn} width=\"30\" />\n          {amountIn}\n          {tokenIn}\n        </Space>\n      </Row>\n      <Row justify=\"center\" align=\"middle\" style={{ width: 30 }}>\n        <span>↓</span>\n      </Row>\n      <Row>\n        <Space>\n          <img src={logoOut} alt={tokenOut} width=\"30\" />\n          {amountOut}\n          {tokenOut}\n        </Space>\n      </Row>\n      <Divider />\n      <Row>{priceWidget}</Row>\n      <Row>\n        {trades && ((amountOutMin && exact === \"in\") || (amountInMax && exact === \"out\"))\n          ? exact === \"in\"\n            ? `Output is estimated. You will receive at least ${amountOutMin.toSignificant(\n                6,\n              )} ${tokenOut} or the transaction will revert.`\n            : `Input is estimated. You will sell at most ${amountInMax.toSignificant(\n                6,\n              )} ${tokenIn} or the transaction will revert.`\n          : null}\n      </Row>\n    </Modal>\n  );\n\n  return (\n    <Card\n      title={\n        <Space>\n          <img src=\"https://ipfs.io/ipfs/QmXttGpZrECX5qCyXbBQiqgQNytVGeZW5Anewvh2jc4psg\" width=\"40\" alt=\"uniswapLogo\" />\n          <Typography>Uniswapper</Typography>\n        </Space>\n      }\n      extra={\n        <Button\n          type=\"text\"\n          onClick={() => {\n            setSettingsVisible(true);\n          }}\n        >\n          <SettingOutlined />\n        </Button>\n      }\n    >\n      <Space direction=\"vertical\">\n        <Row justify=\"center\" align=\"middle\">\n          <Card\n            size=\"small\"\n            type=\"inner\"\n            title={`From${exact === \"out\" && tokenIn && tokenOut ? \" (estimate)\" : \"\"}`}\n            extra={\n              <>\n                <img src={logoIn} alt={tokenIn} width=\"30\" />\n                <Button\n                  type=\"link\"\n                  onClick={() => {\n                    setAmountOut();\n                    setAmountIn(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals));\n                    setAmountOutMin();\n                    setAmountInMax();\n                    setExact(\"in\");\n                  }}\n                >\n                  {formattedBalanceIn}\n                </Button>\n              </>\n            }\n            style={{ width: 400, textAlign: \"left\" }}\n          >\n            <InputNumber\n              style={{ width: \"160px\" }}\n              min={0}\n              size=\"large\"\n              value={amountIn}\n              onChange={e => {\n                setAmountOut();\n                setTrades();\n                setAmountIn(e);\n                setExact(\"in\");\n              }}\n            />\n            <Select\n              showSearch\n              value={tokenIn}\n              style={{ width: \"120px\" }}\n              size=\"large\"\n              bordered={false}\n              defaultValue={defaultToken}\n              onChange={value => {\n                console.log(value);\n                if (value === tokenOut) {\n                  console.log(\"switch!\", tokenIn);\n                  setTokenOut(tokenIn);\n                  setAmountOut(amountIn);\n                  setBalanceOut(balanceIn);\n                }\n                setTokenIn(value);\n                setTrades();\n                setAmountIn();\n                setExact(\"out\");\n                setBalanceIn();\n              }}\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n              optionFilterProp=\"children\"\n            >\n              {tokenList.map(token => (\n                <Option key={token.symbol} value={token.symbol}>\n                  {token.symbol}\n                </Option>\n              ))}\n            </Select>\n          </Card>\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          <Tooltip title={route.join(\"->\")}>\n            <span>↓</span>\n          </Tooltip>\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          <Card\n            size=\"small\"\n            type=\"inner\"\n            title={`To${exact === \"in\" && tokenIn && tokenOut ? \" (estimate)\" : \"\"}`}\n            extra={\n              <>\n                <img src={logoOut} width=\"30\" alt={tokenOut} />\n                <Button type=\"text\">{formattedBalanceOut}</Button>\n              </>\n            }\n            style={{ width: 400, textAlign: \"left\" }}\n          >\n            <InputNumber\n              style={{ width: \"160px\" }}\n              size=\"large\"\n              min={0}\n              value={amountOut}\n              onChange={e => {\n                setAmountOut(e);\n                setAmountIn();\n                setTrades();\n                setExact(\"out\");\n              }}\n            />\n            <Select\n              showSearch\n              value={tokenOut}\n              style={{ width: \"120px\" }}\n              size=\"large\"\n              bordered={false}\n              onChange={value => {\n                console.log(value, tokenIn, tokenOut);\n                if (value === tokenIn) {\n                  console.log(\"switch!\", tokenOut);\n                  setTokenIn(tokenOut);\n                  setAmountIn(amountOut);\n                  setBalanceIn(balanceOut);\n                }\n                setTokenOut(value);\n                setExact(\"in\");\n                setAmountOut();\n                setTrades();\n                setBalanceOut();\n              }}\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n              optionFilterProp=\"children\"\n            >\n              {tokenList.map(token => (\n                <Option key={token.symbol} value={token.symbol}>\n                  {token.symbol}\n                </Option>\n              ))}\n            </Select>\n          </Card>\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          {priceDescription ? priceWidget : null}\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          <Space>\n            {inputIsToken ? (\n              <Button size=\"large\" loading={approving} disabled={!insufficientAllowance} onClick={approveRouter}>\n                {!insufficientAllowance && amountIn && amountOut ? \"Approved\" : \"Approve\"}\n              </Button>\n            ) : null}\n            <Button\n              size=\"large\"\n              loading={swapping}\n              disabled={insufficientAllowance || insufficientBalance || !amountIn || !amountOut}\n              onClick={showSwapModal}\n            >\n              {insufficientBalance ? \"Insufficient balance\" : \"Swap!\"}\n            </Button>\n            {swapModal}\n          </Space>\n        </Row>\n      </Space>\n      <Drawer\n        visible={settingsVisible}\n        onClose={() => {\n          setSettingsVisible(false);\n        }}\n        width={500}\n      >\n        <Descriptions title=\"Details\" column={1} style={{ textAlign: \"left\" }}>\n          <Descriptions.Item label=\"blockNumber\">{blockNumber}</Descriptions.Item>\n          <Descriptions.Item label=\"routerAllowance\">\n            <Space>\n              {routerAllowance ? ethers.utils.formatUnits(routerAllowance, tokens[tokenIn].decimals) : null}\n              {routerAllowance > 0 ? <Button onClick={removeRouterAllowance}>Remove Allowance</Button> : null}\n            </Space>\n          </Descriptions.Item>\n          <Descriptions.Item label=\"route\">{route.join(\"->\")}</Descriptions.Item>\n          <Descriptions.Item label=\"exact\">{exact}</Descriptions.Item>\n          <Descriptions.Item label=\"bestPrice\">\n            {trades ? (trades.length > 0 ? trades[0].executionPrice.toSignificant(6) : null) : null}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"nextMidPrice\">\n            {trades ? (trades.length > 0 ? trades[0].nextMidPrice.toSignificant(6) : null) : null}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"priceImpact\">\n            {trades ? (trades.length > 0 ? trades[0].priceImpact.toSignificant(6) : null) : null}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"slippageTolerance\">\n            <InputNumber\n              defaultValue={defaultSlippage}\n              min={0}\n              max={100}\n              precision={2}\n              formatter={value => `${value}%`}\n              parser={value => value.replace(\"%\", \"\")}\n              onChange={value => {\n                console.log(value);\n\n                const slippagePercent = new Percent(Math.round(value * 100).toString(), \"10000\");\n                setSlippageTolerance(slippagePercent);\n              }}\n            />\n          </Descriptions.Item>\n          <Descriptions.Item label=\"amountInMax\">{amountInMax ? amountInMax.toExact() : null}</Descriptions.Item>\n          <Descriptions.Item label=\"amountOutMin\">{amountOutMin ? amountOutMin.toExact() : null}</Descriptions.Item>\n          <Descriptions.Item label=\"timeLimitInSeconds\">\n            <InputNumber\n              min={0}\n              max={3600}\n              defaultValue={defaultTimeLimit}\n              onChange={value => {\n                console.log(value);\n                setTimeLimit(value);\n              }}\n            />\n          </Descriptions.Item>\n        </Descriptions>\n      </Drawer>\n    </Card>\n  );\n}\n\nexport default Swap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}